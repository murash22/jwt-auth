{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Simple authorization service",
        "title": "JWT Authorization service",
        "contact": {
            "name": "Ashyr",
            "url": "https://t.me/nommstr"
        }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/access": {
            "post": {
                "description": "Endpoint to get tokens pair",
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignIn",
                "operationId": "get-tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User guid. For example: ac798a7c-8244-414b-9f84-c8e4a61c13c0",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful answer with tokens",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "In case if user_id wasn't provided or invalid guid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes refresh-token in db. Because of that, access_token will be valid until it expires (low TTL). And that's why protected routes will be accessible for a little time",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout (deletes refresh token in db)",
                "operationId": "invalidate-tokens",
                "responses": {
                    "200": {
                        "description": "Successfully logged out (deleted refresh-token)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns user's GUID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user's GUID",
                "operationId": "token-subject",
                "responses": {
                    "200": {
                        "description": "Successfully logged out (deleted refresh-token)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Endpoint to update tokens pair. Expects Bearer in Authorization header and refresh-token in Cookie header. When testing in browser, once you update tokens, it is possible to update them with the same input refresh-token, but in fact browser automatically replaces cookies with the one sent from server",
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "UpdateTokens",
                "operationId": "update-tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token passed in Authorization header. For example 'Bearer paste-here-your-access-token'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Refresh token passed in cookie header. For example: 'refresh-token=paste-here-your-refresh-token'",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful answer with tokens",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "In case if invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Authorization header with Bearer. For example: 'Bearer paste-here-your-token'",
            "type": "apiKey",
            "name": "Authorization",
            "in": "Header"
        }
    }
}